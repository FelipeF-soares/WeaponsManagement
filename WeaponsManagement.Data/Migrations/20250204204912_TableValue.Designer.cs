// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeaponsManagement.Data.AppDbContext;

#nullable disable

namespace WeaponsManagement.Data.Migrations
{
    [DbContext(typeof(WeaponDbContext))]
    [Migration("20250204204912_TableValue")]
    partial class TableValue
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("WeaponsManagement.Models.Equipment.PathPictureWeapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("WeaponId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WeaponId");

                    b.ToTable("PathPictureWeapons");
                });

            modelBuilder.Entity("WeaponsManagement.Models.Equipment.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Factory")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MaterialCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PatrimonyNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = ".40",
                            Factory = "Taurus",
                            MaterialCode = "1000",
                            PatrimonyNumber = "1234",
                            SerialNumber = "AXS9878",
                            UnitId = 1,
                            Value = "169,69"
                        },
                        new
                        {
                            Id = 2,
                            Description = ".40",
                            Factory = "Glock",
                            MaterialCode = "1000",
                            PatrimonyNumber = "4321",
                            SerialNumber = "AXS9978",
                            UnitId = 1,
                            Value = "369,69"
                        });
                });

            modelBuilder.Entity("WeaponsManagement.Models.People.Military", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RE")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("WeaponId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WeaponId")
                        .IsUnique();

                    b.ToTable("Militaries");
                });

            modelBuilder.Entity("WeaponsManagement.Models.People.PathPictureMilitary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MilitaryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PicturePath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MilitaryId")
                        .IsUnique();

                    b.ToTable("PathPictureMilitary");
                });

            modelBuilder.Entity("WeaponsManagement.Models.Place.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UnitCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ZIPCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "São Sebastião",
                            Name = "Batalhão",
                            Neighborhood = "Paulista",
                            Number = "1",
                            State = "São Paulo",
                            Street = "Av. Brasil",
                            UnitCode = "100",
                            ZIPCode = "0800-000"
                        });
                });

            modelBuilder.Entity("WeaponsManagement.Models.Equipment.PathPictureWeapon", b =>
                {
                    b.HasOne("WeaponsManagement.Models.Equipment.Weapon", null)
                        .WithMany("PathPictures")
                        .HasForeignKey("WeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeaponsManagement.Models.Equipment.Weapon", b =>
                {
                    b.HasOne("WeaponsManagement.Models.Place.Unit", null)
                        .WithMany("Weapons")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeaponsManagement.Models.People.Military", b =>
                {
                    b.HasOne("WeaponsManagement.Models.Equipment.Weapon", null)
                        .WithOne("Military")
                        .HasForeignKey("WeaponsManagement.Models.People.Military", "WeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeaponsManagement.Models.People.PathPictureMilitary", b =>
                {
                    b.HasOne("WeaponsManagement.Models.People.Military", null)
                        .WithOne("PathPicture")
                        .HasForeignKey("WeaponsManagement.Models.People.PathPictureMilitary", "MilitaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeaponsManagement.Models.Equipment.Weapon", b =>
                {
                    b.Navigation("Military");

                    b.Navigation("PathPictures");
                });

            modelBuilder.Entity("WeaponsManagement.Models.People.Military", b =>
                {
                    b.Navigation("PathPicture")
                        .IsRequired();
                });

            modelBuilder.Entity("WeaponsManagement.Models.Place.Unit", b =>
                {
                    b.Navigation("Weapons");
                });
#pragma warning restore 612, 618
        }
    }
}
